import random, json, base64, zlib
from flask import session
from data.situations import SITUATIONS
from data.models import TOOL_MODELS, CATEGORY_SITUATION_IDS
from services.openai_service import assign_voice_for_situation

def get_situation_from_session():
    # –û—Ç—Ä–∏–º—É—î–º–æ —Å—Ç–∏—Å–Ω—É—Ç—É —Å–∏—Ç—É–∞—Ü—ñ—é –∑ —Å–µ—Å—ñ—ó
    compressed_situation_base64 = session.get('compressed_situation', '')
    if compressed_situation_base64:
        # –†–æ–∑–∫–æ–¥–æ–≤—É—î–º–æ –∑ base64
        compressed_situation = base64.b64decode(compressed_situation_base64)
        
        # –†–æ–∑–ø–∞–∫–æ–≤—É—î–º–æ –¥–∞–Ω—ñ
        decompressed_data_bytes = zlib.decompress(compressed_situation)
        decompressed_data_str = decompressed_data_bytes.decode('utf-8')
        
        # –ó–∞–º—ñ–Ω–∞ eval –Ω–∞ JSON
        try:
            situation = json.loads(decompressed_data_str)  # –ë–µ–∑–ø–µ—á–Ω—ñ—à–µ —Ä–æ–∑–±–∏—Ä–∞—Ç–∏ —á–µ—Ä–µ–∑ JSON
            return situation
        except ValueError as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–æ–∑–±–æ—Ä—ñ –¥–∞–Ω–∏—Ö: {e}")
            return None
    return None

def init_conversation():
    saved_category = session.get('category', 'exam')  # –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–æ –æ—á–∏—Å—Ç–∫–∏
    session.clear()  # —á–∏—Å—Ç–∏–º–æ —Å–µ—Å—ñ—é
    session['category'] = saved_category  # –≤—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é

    # –æ—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ ID –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
    category = session.get('category', 'exam')
    allowed_ids = CATEGORY_SITUATION_IDS.get(category, list(range(1, 37)))
    filtered_situations = [s for s in SITUATIONS if s['id'] in allowed_ids]
    selected_situation = random.choice(filtered_situations)

    # debug print –ø—ñ—Å–ª—è –æ–±—á–∏—Å–ª–µ–Ω—å
    print("[DEBUG] –û–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è:", category)
    print("[DEBUG] –î–æ—Å—Ç—É–ø–Ω—ñ ID:", [s["id"] for s in filtered_situations])

    session['situation'] = selected_situation
    session['current_situation_id'] = selected_situation["id"]

    session['voice'] = assign_voice_for_situation(selected_situation["id"])
    print("[DEBUG] –ì–æ–ª–æ—Å –¥–ª—è —Ü—ñ—î—ó —Å–∏—Ç—É–∞—Ü—ñ—ó:", session['voice'])
    
    # –ö–æ–º–ø—Ä–µ—Å—É—î–º–æ –¥–∞–Ω—ñ —Å–∏—Ç—É–∞—Ü—ñ—ó
    situation_str = str(selected_situation)  # –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –≤ —Ä—è–¥–æ–∫
    situation_bytes = situation_str.encode('utf-8')  # –ü–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –≤ –±–∞–π—Ç–∏
    compressed_situation = zlib.compress(situation_bytes)  # –°—Ç–∏—Å–∫–∞—î–º–æ
    compressed_situation_base64 = base64.b64encode(compressed_situation).decode('utf-8')  # –ö–æ–¥—É—î–º–æ –≤ base64
    session['compressed_situation'] = compressed_situation_base64  # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ —Å–µ—Å—ñ—ó

    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —ñ–Ω—à—ñ –¥–∞–Ω—ñ —Å–µ—Å—ñ—ó
    session['current_situation_id'] = selected_situation["id"]
    for cat, ids in CATEGORY_SITUATION_IDS.items():
        if selected_situation["id"] in ids:
            session["current_category"] = cat
            break
    session['available_models'] = TOOL_MODELS.copy()  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–æ–ø—ñ—é, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –æ—Ä–∏–≥—ñ–Ω–∞–ª—É
    session['stage'] = 1
    session['chat_active'] = True
    session['message_count'] = 0
    session['wrong_model_attempts'] = 0
    session['question_count'] = 0
    session['unique_questions'] = []
    session['off_topic_count'] = 0
    session['misunderstood_count'] = 0
    session['objection_round'] = 1
    session['warning_count'] = 0
    session['user_answers'] = {}
    session['question_scores'] = []
    session['model_score'] = 0
    session['total_score'] = 0
    session['seller_replies'] = []
    session['irrelevant_answers'] = 0
    session.modified = True

    system_prompt = f"""
    –¢–∏ ‚Äî –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–∏–π **–∫–ª—ñ—î–Ω—Ç –º–∞–≥–∞–∑–∏–Ω—É**, —è–∫–∏–π **–ø—Ä–∏–π—à–æ–≤ –∫—É–ø–∏—Ç–∏ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç**.

    üîπ **–ì–æ–ª–æ–≤–Ω–∞ –º–µ—Ç–∞** ‚Äî —Ç—Ä–∏–º–∞—Ç–∏—Å—è —Ä–æ–ª—ñ –ø–æ–∫—É–ø—Ü—è, —è–∫–∏–π –≤–∏—Å–ª–æ–≤–ª—é—î —Å–≤–æ—ó –≤–∏–º–æ–≥–∏ —Ç–∞ —É—Ç–æ—á–Ω—é—î –¥–µ—Ç–∞–ª—ñ —â–æ–¥–æ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—É.  
    üîπ **–§–æ—Ä–º–∞—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ** ‚Äî –∑–∞–≤–∂–¥–∏ –æ–¥–Ω–µ –∫–æ—Ä–æ—Ç–∫–µ —Ä–µ—á–µ–Ω–Ω—è (5‚Äì15 —Å–ª—ñ–≤).  
    üîπ **–¢–æ–Ω** ‚Äî –ø—Ä–∏—Ä–æ–¥–Ω–∏–π –¥—ñ–∞–ª–æ–≥ –ø–æ–∫—É–ø—Ü—è: –º–æ–∂–µ—à –±—É—Ç–∏ —Ç—Ä–æ—Ö–∏ –Ω–µ—Ç–µ—Ä–ø–ª—è—á–∏–º, –ø—Ä–∏—Å–∫—ñ–ø–ª–∏–≤–∏–º, –∞–ª–µ –±–µ–∑ –∑–∞–π–≤–æ—ó –≤–≤—ñ—á–ª–∏–≤–æ—Å—Ç—ñ.

    ---

    ### **–ü—Ä–∞–≤–∏–ª–∞ –ø–æ–≤–µ–¥—ñ–Ω–∫–∏** (—É –ø–æ—Ä—è–¥–∫—É –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç—É)
    1. **–ù—ñ–∫–æ–ª–∏ –Ω–µ –≥—Ä–∞–π —Ä–æ–ª—å –ø—Ä–æ–¥–∞–≤—Ü—è** ‚Äî –Ω–µ –∫–æ–Ω—Å—É–ª—å—Ç—É–π, –Ω–µ –ø—Ä–æ–ø–æ–Ω—É–π –º–æ–¥–µ–ª—ñ, –Ω–µ —Å—Ç–∞–≤ –∑—É—Å—Ç—Ä—ñ—á–Ω–∏—Ö –∑–∞–ø–∏—Ç–∞–Ω—å.
    2. **–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —Ç—ñ–ª—å–∫–∏ –Ω–∞ —Ç–µ, —â–æ —Å–∫–∞–∑–∞–≤ –ø—Ä–æ–¥–∞–≤–µ—Ü—å (–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á)**. –ù–µ –ø–æ—á–∏–Ω–∞–π –Ω–æ–≤–∏—Ö —Ç–µ–º.
    3. –Ø–∫—â–æ —Ä–µ–ø–ª—ñ–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ **—Å—Ç–æ—Å—É—î—Ç—å—Å—è —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—É –∞–±–æ –≤–∏–º–æ–≥ –¥–æ –Ω—å–æ–≥–æ** ‚Äî –º–æ–∂–µ—à –Ω–∞–¥–∏—Ö–∞—Ç–∏—Å—è –ø—ñ–¥–∫–∞–∑–∫–∞–º–∏ (–∞–ª–µ –ø–µ—Ä–µ—Ñ—Ä–∞–∑–æ–≤—É–π —ó—Ö —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –º–∞–∫—Å–∏–º—É–º –æ–¥–Ω—É –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å).
    4. –Ø–∫—â–æ —Ä–µ–ø–ª—ñ–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ **–Ω–µ —Å—Ç–æ—Å—É—î—Ç—å—Å—è —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—É** ‚Äî –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–π –∫–æ—Ä–æ—Ç–∫–æ —Ç–∞ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ –±–µ–∑ –ø—ñ–¥–∫–∞–∑–æ–∫.  
    –ü—Ä–∏–∫–ª–∞–¥–∏: "–ú–µ–Ω–µ —Ü–µ –Ω–µ —Ü—ñ–∫–∞–≤–∏—Ç—å", "–î–∞–≤–∞–π—Ç–µ –ø—Ä–æ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç", "–ù–µ —Ö–æ—á—É –ø—Ä–æ —Ü–µ –≥–æ–≤–æ—Ä–∏—Ç–∏".
    5. –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î **–ª–∞–π–∫—É –∞–±–æ –æ–±—Ä–∞–∑–ª–∏–≤—ñ —Å–ª–æ–≤–∞** ‚Äî –Ω–∞—Ç—è–∫–Ω–∏, —â–æ –º–æ–∂–µ—à –ø—ñ—Ç–∏, –±–æ —Ö–æ—á–µ—à –Ω–∞–ª–µ–∂–Ω–æ–≥–æ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è.  
    –ü—Ä–∏–∫–ª–∞–¥–∏: "–ù–µ —Å–ø—ñ–ª–∫—É–π—Ç–µ—Å—è —Ç–∞–∫ –∑—ñ –º–Ω–æ—é", "–©–µ —Ç—Ä–æ—Ö–∏ –π —è –ø—ñ–¥—É".
    6. –ù–µ —Ä–æ–∑–≤–∏–≤–∞–π —Ç–µ–º—É —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ, –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —Ä–æ–±–∏—Ç—å –ø–∞—É–∑–∏ –∞–±–æ –ø–∏—à–µ –∑–∞–≥–∞–ª—å–Ω—ñ —Ñ—Ä–∞–∑–∏.

    ---

    ### **–°–∏—Ç—É–∞—Ü—ñ—è**:
    {selected_situation['description']}

    ### **–ú–æ—ó –ø–æ—Ç—Ä–µ–±–∏**:
    {selected_situation['requirements']}

    ### **–ú–æ—è –ø–æ–≤–µ–¥—ñ–Ω–∫–∞**:
    {selected_situation.get('behavior')}

    ---

    ### **–ü—ñ–¥–∫–∞–∑–∫–∏ (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –ª–∏—à–µ –ø—Ä–∏ —Ä–æ–∑–º–æ–≤—ñ –ø—Ä–æ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç)**:
    {'\n'.join(selected_situation.get("hints", []))}

    ---

    ### **–ü–æ—á–∞—Ç–æ–∫ —Ä–æ–∑–º–æ–≤–∏**:
    "–î–æ–±—Ä–∏–π –¥–µ–Ω—å, –º–µ–Ω—ñ —Ç—Ä–µ–±–∞ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç."
    """
    return [
        {"role": "system", "content": system_prompt},
        {"role": "assistant", "content": f"–î–æ–±—Ä–∏–π –¥–µ–Ω—å, –º–µ–Ω—ñ —Ç—Ä–µ–±–∞ {session['situation']['description']}"}
    ]

